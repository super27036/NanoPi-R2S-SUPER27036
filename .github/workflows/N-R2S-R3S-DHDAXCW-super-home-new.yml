#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: N-R2S-R3S-DHDAXCW-super-home-new

on: 
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0 5 1 * *' # 1st every month

env:
  REPO_URL: https://github.com/DHDAXCW/lede-rockchip
  REPO_BRANCH: stable
  DIY_SH: scripts/DHDAXCW-super-2024.sh
  KMODS_IN_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04
    if: github.repository == 'super27036/NanoPi-R2S-SUPER27034'
    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        device: [r2s, r3s]
      fail-fast: false

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: gruve-p/free-disk-space@main
      with:
        tool-cache: true
        codeql-images: true
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: true

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex g++-multilib gawk gcc-multilib gettext git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs unzip upx-ucl vim vpnc wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Cache Downloads
      uses: actions/cache@v3
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-downloads-${{ hashFiles('**/feeds.conf.default') }}
        restore-keys: |
          ${{ runner.os }}-downloads-

    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Update Feeds
      run: |
        cd $OPENWRTROOT
        mkdir customfeeds
        git clone --depth=1 https://github.com/DHDAXCW/packages customfeeds/packages
        git clone --depth=1 https://github.com/DHDAXCW/luci customfeeds/luci
        chmod +x ../scripts/*.sh
        ../scripts/hook-feeds.sh

    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        ./scripts/feeds install -a

    - name: Copy FILES
      run: |
        cd $OPENWRTROOT
        cp -rf ../PATCH/super-home-files/files ./files

    - name: Build Firmware for ${{ matrix.device }}
      run: |
        echo "Building ${{ matrix.device }} Firmware"
        cd $OPENWRTROOT
        CONFIG_FILE=configs/lean/DHDAXCW-super-2024-${{ matrix.device }}.config
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRTROOT/.config
        chmod +x ../scripts/*.sh
        ../$DIY_SH
        ../scripts/modify-default.sh
        ../scripts/preset-clash-core.sh arm64
        ../scripts/preset-terminal-tools.sh
        make defconfig
        make download -j8
        make target/compile -j$(nproc) || make target/compile -j1 V=s
        make package/compile -j$(nproc) || make package/compile -j1 V=s
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        cd bin/targets/rockchip/armv8
        mv openwrt-rockchip-armv8-friendlyarm_nanopi-${{ matrix.device }}-ext4-sysupgrade.img.gz DHDAXCW-super-home-${{ matrix.device }}-ext4-sysupgrade-$(date +"%Y%m%d").img.gz
        mv openwrt-rockchip-armv8-friendlyarm_nanopi-${{ matrix.device }}-squashfs-sysupgrade.img.gz DHDAXCW-super-home-${{ matrix.device }}-squashfs-$(date +"%Y%m%d").img.gz
        echo "${{ matrix.device }} build completed"

    - name: Upload firmware to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ matrix.device }}
        path: |
          ${{ env.OPENWRTROOT }}/bin/targets/rockchip/armv8/DHDAXCW-super-home-${{ matrix.device }}-ext4-sysupgrade-*.img.gz
          ${{ env.OPENWRTROOT }}/bin/targets/rockchip/armv8/DHDAXCW-super-home-${{ matrix.device }}-squashfs-*.img.gz

  Release:
    needs: Build
    runs-on: ubuntu-22.04
    if: ${{ env.UPLOAD_RELEASE == 'true' && !cancelled() }}
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate release tag
      id: tag
      run: |
        echo "release_tag=$(date +"%Y.%m.%d")-Lean1" >> $GITHUB_OUTPUT
        echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "此固件为自己私用，请勿下载使用
              lede = 使用coolsnowwolf的lede仓库
              DHDAXCW = 使用DHDAXCW的修改后仓库
              slim = 精简版
              stable = 稳定版" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: ${{ steps.tag.outputs.status == 'success' && !cancelled() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} NanoPi-R2S-R3S-linux.5.4_固件下载
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          artifacts/firmware-r2s/DHDAXCW-super-home-r2s-ext4-sysupgrade-*.img.gz
          artifacts/firmware-r2s/DHDAXCW-super-home-r2s-squashfs-*.img.gz
          artifacts/firmware-r3s/DHDAXCW-super-home-r3s-ext4-sysupgrade-*.img.gz
          artifacts/firmware-r3s/DHDAXCW-super-home-r3s-squashfs-*.img.gz

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: ${{ env.UPLOAD_RELEASE == 'true' && !cancelled() }}
      with:
        keep_latest: 20
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: |
          firmware-r2s
          firmware-r3s
