#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: R2S-R3S-DHDAXCW-super-home-alt

on: 
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0 5 1 * *' # 1st every month

env:
  REPO_URL: https://github.com/DHDAXCW/lede-rockchip
  REPO_BRANCH: stable
  DIY_SH: scripts/DHDAXCW-super-2024.sh
  KMODS_IN_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Prepare:
    runs-on: ubuntu-22.04
    if: github.repository == 'super27036/NanoPi-R2S-SUPER27034'
    steps:
    - name: Free Disk Space (Ubuntu)
      uses: gruve-p/free-disk-space@main
      with:
        tool-cache: true
        codeql-images: true
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: true
        
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex g++-multilib gawk gcc-multilib gettext git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs unzip upx-ucl vim vpnc wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        export PATH="/usr/lib/ccache:$PATH"
        export CCACHE_DIR="$HOME/.ccache"

    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        
    - name: Update Feeds
      run: |
        cd $OPENWRTROOT
        mkdir customfeeds
        git clone --depth=1 https://github.com/DHDAXCW/packages customfeeds/packages
        git clone --depth=1 https://github.com/DHDAXCW/luci customfeeds/luci
        chmod +x ../scripts/*.sh
        ../scripts/hook-feeds.sh

    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        ./scripts/feeds install -a

    - name: Clone Private Files Repository
      run: |
        cd $OPENWRTROOT
        git clone https://${{ secrets.FILES_TOKEN }}@github.com/super27034/Private-FILES.git private-files
        cp -r private-files/PATCH/super-home-files/files ./files
        rm -rf private-files

    - name: Copy FILES
      run: |
        cd $OPENWRTROOT
        cp -rf ../PATCH/super-home-files/files ./files

    - name: Load Base Configuration
      run: |
        cd $OPENWRTROOT
        chmod +x ../scripts/*.sh
        ../$DIY_SH
        ../scripts/modify-default.sh
        ../scripts/preset-clash-core.sh arm64
        ../scripts/preset-terminal-tools.sh
        make defconfig
        cat $OPENWRTROOT/.config

    - name: Cache Downloads
      uses: actions/cache@v3
      with:
        path: ${{ env.OPENWRTROOT }}/dl
        key: ${{ runner.os }}-downloads-${{ hashFiles('${{ env.OPENWRTROOT }}/feeds.conf.default') }}
        restore-keys: |
          ${{ runner.os }}-downloads-

    - name: Cache ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Download Package
      run: |
        cd $OPENWRTROOT
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Tools and Toolchain
      run: |
        cd $OPENWRTROOT
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s

    - name: Debug Upload Source
      run: |
        echo "Listing files to be uploaded from ${{ env.OPENWRTROOT }}:"
        ls -lhR ${{ env.OPENWRTROOT }}/
        echo "Listing ccache directory:"
        ls -lhR ~/.ccache/

    - name: Upload Source
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-source
        path: |
          ${{ env.OPENWRTROOT }}/
          ~/.ccache/

  Build:
    needs: Prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        device: [r2s, r3s]
      fail-fast: false
    steps:
    - name: Download Source
      uses: actions/download-artifact@v4
      with:
        name: openwrt-source
        path: .

    - name: Setup Environment
      run: |
        echo "Listing downloaded files in current directory:"
        ls -lh
        # Find the openwrt directory dynamically
        OPENWRT_DIR=$(find . -maxdepth 2 -type d -name "openwrt" | head -n 1)
        if [ -n "$OPENWRT_DIR" ] && [ -d "$OPENWRT_DIR" ]; then
          echo "Found openwrt directory at: $OPENWRT_DIR"
          chmod -R u+w "$OPENWRT_DIR"
          cd "$OPENWRT_DIR"
        else
          echo "Error: openwrt directory not found in downloaded artifact!"
          ls -lhR .
          exit 1
        fi
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        export PATH="/usr/lib/ccache:$PATH"
        export CCACHE_DIR="$HOME/.ccache"
        echo "Current directory after cd:"
        pwd
        ls -lh

    - name: Load Device Configuration
      run: |
        CONFIG_FILE=configs/lean/DHDAXCW-super-2024-${{ matrix.device }}.config
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRTROOT/.config || { echo "Error: Config file for ${{ matrix.device }} not found!"; exit 1; }
        cd $OPENWRTROOT
        make defconfig
        cat $OPENWRTROOT/.config

    - name: Change Default Settings and Verify
      run: |
        echo "YES shell to zsh"
        grep '/usr/bin/zsh' $OPENWRTROOT/package/base-files/files/etc/passwd || echo "Replacement failed!"
        echo "Yes IP"
        grep '192.168.5.1' $OPENWRTROOT/package/base-files/files/bin/config_generate || echo "Replacement failed!"
        echo "YES
